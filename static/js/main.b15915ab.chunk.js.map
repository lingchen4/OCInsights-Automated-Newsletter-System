{"version":3,"sources":["components/EmailTempateBtn.js","util/JDSchema.js","components/ImportJD.js","util/TalentSchema.js","components/ImportTalent.js","components/LoadData.js","components/ResultTable.js","components/Richtext.js","util/EmailTemplate.js","components/Sample.js","App.js","index.js"],"names":["EmailTempateBtn","viewEmailTemplate","setViewEmailTemplate","className","htmlFor","onClick","schema","prop","type","String","ImportJD","setJd","job_data","id","accept","onChange","e","file","target","files","readXlsxFile","then","data","rows","forEach","location","seniority","iom","push","ImportTalent","setTalents","LoadData","talents","jd","setResults","removeSpace","toLowerCase","replace","finalResults","length","i","finalMatch","filter","match","techstack","includes","finalResult","name","email","job1","job2","job3","job4","job5","linkedin","alert","getMatch","ResultTable","results","setSample","setShowSample","showSample","useState","currData","setCurrData","page","setPage","totalPage","pages","handlePageChange","a","updatedPage","useEffect","slice","Object","keys","map","values","detail","href","url","rel","handleShowSample","style","fontWeight","Richtext","setTemplate","EditorState","createWithContent","ContentState","createFromBlockArray","convertFromHTML","editorState","setEditorState","stateToHTML","getCurrentContent","onEditorStateChange","Sample","template","sample","preview","setPreview","firstName","split","jobList","Boolean","job_name","company","ReactHtmlParser","App","React","memo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b15915ab.chunk.js","sourcesContent":["import React from 'react'\n\nfunction EmailTempateBtn({viewEmailTemplate, setViewEmailTemplate}) {\n\n  return (\n    <div>\n      <div className=\"upload-btn\" htmlFor=\"talent\" onClick={()=> setViewEmailTemplate(!viewEmailTemplate)}>Email Tempate</div>\n    </div>\n  )\n}\n\nexport default EmailTempateBtn\n","export const schema = {\n  \"Job Name\": {\n    prop: \"job_name\",\n    type: String,\n  },\n  \"Location\": {\n    prop: \"location\",\n    type: String,\n  },\n  \"Company\": {\n    prop: \"company\",\n    type: String,\n  },\n  \"TechStack\": {\n    prop: \"techstack\",\n    type: String,\n  },\n  \"Seniority\": {\n    prop: \"seniority\",\n    type: String,\n  },\n  \"IOM\": {\n    prop: \"iom\",\n    type: String,\n  },\n  \"JobURL\": {\n    prop: \"url\",\n    type: String,\n  },\n};\n","import React from \"react\";\nimport { schema } from \"../util/JDSchema\";\nimport readXlsxFile from \"read-excel-file\";\n\nfunction ImportJD({ setJd }) {\n  let job_data = {};\n\n\n  const handleFileUpload = (e) => {\n    const file = e.target.files[0];\n    readXlsxFile(file, { schema }).then((data) => {\n      data.rows.forEach((e) => {\n        if (!job_data[e.location]) {\n          job_data[e.location] = {}\n          job_data[e.location][e.seniority] = {}\n          job_data[e.location][e.seniority][e.iom] = [e]\n        }else{\n          if(!job_data[e.location][e.seniority]){\n            job_data[e.location][e.seniority] = {}\n            job_data[e.location][e.seniority][e.iom] = [e]\n          }else{\n            if(!job_data[e.location][e.seniority][e.iom]){\n              job_data[e.location][e.seniority][e.iom] = [e]\n            }else{\n              job_data[e.location][e.seniority][e.iom].push(e)\n            }\n          }\n        }\n      });\n      setJd(job_data);\n    });\n  };\n\n  return (\n    <div>\n      <label className=\"upload-btn\" htmlFor=\"job_description\">\n        JD Import\n      </label>\n      <input\n        className=\"upload-input\"\n        type=\"file\"\n        id=\"job_description\"\n        accept=\".csv,.xlsx,.xls\"\n        onChange={handleFileUpload}\n      />\n    </div>\n  );\n}\n\nexport default ImportJD;\n","export const schema = {\n  \"Talent_Name\": {\n    prop: \"name\",\n    type: String,\n  },\n  \"Location\": {\n    prop: \"location\",\n    type: String,\n  },\n  \"Seniority\": {\n    prop: \"seniority\",\n    type: String,\n  },\n  \"TechStack\": {\n    prop: \"techstack\",\n    type: String,\n  },\n  \"IOM\": {\n    prop: \"iom\",\n    type: String,\n  },\n  \"Email\": {\n    prop: \"email\",\n    type: String,\n  },\n  \"LinkedInURL\": {\n    prop: \"linkedin\",\n    type: String,\n  },\n};\n","import React from 'react'\nimport readXlsxFile from \"read-excel-file\";\nimport { schema } from '../util/TalentSchema'\n\nfunction ImportTalent({setTalents}) {\n\n  const handleFileUpload = (e) => {\n    const file = e.target.files[0];\n    readXlsxFile(file, { schema }).then((data) => setTalents(data.rows));\n  };\n\n  return (\n    <div>\n      <label className=\"upload-btn\" htmlFor=\"talent\">Talent Import</label>\n      <input className=\"upload-input\" id=\"talent\" type=\"file\" accept=\".csv,.xlsx,.xls\" onChange={handleFileUpload} />\n    </div>\n  );\n}\n\nexport default ImportTalent;\n","import React from \"react\";\n\nfunction LoadData({ talents, jd, setResults }) {\n  let removeSpace = (e) => e.toLowerCase().replace(\" \", \"\");\n  let getMatch = () => {\n    let finalResults = [];\n    if (talents.length !== 0 && jd.length !== 0) {\n      talents.forEach((e,i) => {\n        let firstMatchResults = jd[e.location][e.seniority][e.iom];\n        let finalMatch = firstMatchResults.filter(match => removeSpace(e.techstack).includes(removeSpace(match.techstack)) || removeSpace(match.techstack).includes(removeSpace(e.techstack)))\n        let finalResult = {\n          name: e.name,\n          email: e.email,\n          location: e.location,\n          techstack: e.techstack,\n          iom: e.iom,\n          job1: finalMatch[0] || '',\n          job2: finalMatch[1] || '',\n          job3: finalMatch[2] || '',\n          job4: finalMatch[3] || '',\n          job5: finalMatch[4] || '',\n          linkedin: e.linkedin\n        }\n        finalResults.push(finalResult)\n      });\n      setResults(finalResults)\n    } else {\n      alert(`Please import data`);\n      return;\n    }\n  };\n\n  return (\n    <div className=\"upload-btn\" onClick={() => getMatch()}>\n      Load Data\n    </div>\n  );\n}\n\nexport default LoadData;\n","import React, { useState, useEffect } from \"react\";\n\nexport const list = 10;\n\nfunction ResultTable({ results, setSample, setShowSample, showSample }) {\n  const [currData, setCurrData] = useState([]);\n  const [page, setPage] = useState(0);\n\n  const totalPage = results.length / list;\n  const pages = [];\n\n  const handlePageChange = (a) => {\n    let updatedPage = page + a;\n    if (updatedPage > -1 && updatedPage < totalPage) {\n      setPage(updatedPage);\n    }\n  };\n\n  const handleShowSample = (e) => {\n    setSample(e);\n    setShowSample(!showSample);\n  };\n\n  for (let i = 1; i < totalPage + 1; i++) {\n    pages.push(i);\n  }\n  useEffect(() => {\n    setCurrData(results.slice(page * list, page * list + list));\n  }, [results, page]);\n\n\n  return results.length > 0 ? (\n    <div>\n      <div className=\"container-table\">\n        <table>\n          <thead>\n            <tr>\n              {Object.keys(results[0])?.map((e) => (\n                <th key={e}>{e}</th>\n              ))}\n              <th>Preview</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {currData.map((e) => (\n              <tr key={e.name}>\n                {Object.values(e).map((detail, i) => (\n                  <td key={detail + i}>\n                    {typeof detail === \"object\" || detail?.includes(\"http\") ? (\n                      <a\n                        href={typeof detail === \"object\" ? detail.url : detail}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                      >\n                        link\n                      </a>\n                    ) : (\n                      detail\n                    )}\n                  </td>\n                ))}\n                {e.job1 !== \"\" ? (\n                  <td>\n                    <button onClick={() => handleShowSample(e)}>Preview</button>\n                  </td>\n                ) : (\n                  <td>\n                    N/A\n                  </td>\n                )}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        <div className=\"container-pagination\">\n          <ul className=\"pagination\">\n            <li onClick={() => handlePageChange(-1)}>&#60; Pre</li>\n            {pages.map((e) => (\n              <li\n                key={e + \"i\"}\n                onClick={() => setPage(e - 1)}\n                style={{ fontWeight: e - 1 === page ? \"bold\" : \"normal\" }}\n              >\n                {e}\n              </li>\n            ))}\n            <li onClick={() => handlePageChange(1)}>Next &#62; </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  ) : (\n    \"DATA not avaliable\"\n  );\n}\n\nexport default ResultTable;\n","import React, { useEffect, useState } from \"react\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport { ContentState, convertFromHTML, EditorState } from \"draft-js\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport { EmailTemplate } from \"../util/EmailTemplate\";\nimport {stateToHTML} from 'draft-js-export-html';\n\nexport default function Richtext({setTemplate, viewEmailTemplate, setViewEmailTemplate}) {\n  const [editorState, setEditorState] = useState(() =>\n    EditorState.createWithContent(\n      ContentState.createFromBlockArray(\n        convertFromHTML(EmailTemplate)\n      )\n    )\n  );\n  useEffect(() => {\n    setTemplate(stateToHTML(editorState.getCurrentContent()))\n  }, [editorState, setTemplate]);\n  return viewEmailTemplate ? (\n    <div className=\"richtext-container\">\n      <div className=\"modal\"></div>\n      <div className=\"modal-container\">\n        <button className=\"template-close\" onClick={()=> setViewEmailTemplate(!viewEmailTemplate)}>X</button>\n        <Editor\n          editorState={editorState}\n          onEditorStateChange={setEditorState}\n        />\n      </div>\n    </div>\n  ) : '';\n}","export const EmailTemplate = `\n  <p>Hi [ First Name ],</p>\n  <p></p>\n  <p>This is Kirby who has connected with you on LinkedIn several days ago. I would like to share the open opportunities that could be a good match for you.  Meanwhile, I’d love to send the job openings that could be a good fit along with our insights to you every week. Hope the information could help you more with your career choice. </p>\n  <p></p>\n  <ol>\n    <li>[Title]   [Company]   [Location]    [URL]</li>\n    <li>[Title]   [Company]   [Location]    [URL]</li>\n    <li>[Title]   [Company]   [Location]    [URL]</li>\n    <li>[Title]   [Company]   [Location]    [URL]</li>\n    <li>[Title]   [Company]   [Location]    [URL]</li>\n  </ol>\n  \n  <p></p>\n  <p>Best,</p>\n  <p>Kirby</p>\n`;\n","import React, { useEffect, useState } from \"react\";\nimport ReactHtmlParser from \"react-html-parser\";\n\nfunction Sample({ template, sample, showSample, setShowSample }) {\n  const [preview, setPreview] = useState(\"\");\n\n  useEffect(() => {\n    const { name, job1, job2, job3, job4, job5 } = sample;\n    let firstName = name?.split(\" \")[0];\n    let jobList = [job1, job2, job3, job4, job5].filter(Boolean);\n    if(jobList.length>1){\n      \n    }\n    let preview = template.replace(\"[ First Name ]\", firstName);\n    for(let i=0;i<5-jobList.length;i++){\n      preview = preview.replace(/(<li>).+(<\\/li>)/, '')\n    }\n    jobList.forEach( (e) => {\n        preview = preview.replace('Title', e.job_name)\n        preview = preview.replace('Company', e.company)\n        preview = preview.replace('Location', e.location)\n        preview = preview.replace('URL', `<a href=\"${e.url}\" target=\"_blank\">link</a>`)\n    })\n    setPreview(preview);\n  }, [sample, template]);\n\n  return showSample ? (\n    <div>\n      <div className=\"modal\"></div>\n\n      <div className=\"modal-container text-left\">\n        <button\n          className=\"template-close\"\n          onClick={() => setShowSample(!showSample)}\n        >\n          X\n        </button>\n        <div className=\"sample-container\">{ReactHtmlParser(preview)}</div>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default Sample;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport EmailTempateBtn from \"./components/EmailTempateBtn\";\nimport ImportJD from \"./components/ImportJD\";\nimport ImportTalent from \"./components/ImportTalent\";\nimport LoadData from \"./components/LoadData\";\nimport ResultTable from \"./components/ResultTable\";\nimport Richtext from \"./components/Richtext\";\nimport Sample from \"./components/Sample\";\n\nfunction App() {\n  const [talents, setTalents] = useState([]);\n  const [jd, setJd] = useState([]);\n  const [results, setResults] = useState([]);\n  const [viewEmailTemplate, setViewEmailTemplate] = useState(false);\n  const [template, setTemplate] = useState(\"\");\n  const [sample, setSample] = useState({})\n  const [showSample, setShowSample] = useState(false)\n\n  return (\n    <div className=\"App\">\n      <h1>OCInsights Automated Newsletter System</h1>\n      <div className=\"container-btn\">\n        <ImportTalent setTalents={setTalents} />\n        <ImportJD setJd={setJd} />\n        <LoadData talents={talents} jd={jd} setResults={setResults} />\n        <EmailTempateBtn viewEmailTemplate={viewEmailTemplate} setViewEmailTemplate={setViewEmailTemplate} />\n      </div>\n\n      <ResultTable results={results} setSample={setSample} showSample={showSample} setShowSample={setShowSample} />\n      <Richtext setTemplate={setTemplate} viewEmailTemplate={viewEmailTemplate} setViewEmailTemplate={setViewEmailTemplate}/>\n      <Sample template={template} sample={sample} showSample={showSample} setShowSample={setShowSample}/>\n    </div>\n  );\n}\n\nexport default React.memo(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}